{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAkBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CA1BbL,EAAKY,iBAAiB,UAAUC,IAC9BA,EAAEC,iBAEFT,MAAQU,OAAOf,EAAKgB,SAASX,MAAMY,OACnCC,KAAOlB,EAAKgB,SAASE,KAAKD,MAC1BE,OAASnB,EAAKgB,SAASG,OAAOF,MAK9B,IAAK,IAAIG,EAAI,EAAGA,EAAID,OAAQC,IAC1BjB,EAAciB,EAAGF,KAAOE,EAAIf,OACzBgB,MAAKC,GAAWC,EAAAzB,GAAS0B,OAAOF,QAAQA,KACxCG,OAAMC,GAASH,EAAAzB,GAAS0B,OAAOG,QAAQD,IAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  delay = Number(form.elements.delay.value);\n  step = form.elements.step.value;\n  amount = form.elements.amount.value;\n  /* const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n */\n  for (let i = 0; i < amount; i++) {\n    createPromise(i, step * i + delay)\n      .then(success => Notiflix.Notify.success(success))\n      .catch(error => Notiflix.Notify.failure(error));\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","Number","elements","value","step","amount","i","then","success","$parcel$interopDefault","Notify","catch","error","failure"],"version":3,"file":"03-promises.75f0b0b8.js.map"}